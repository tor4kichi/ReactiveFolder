<Window x:Class="ReactiveFolder.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReactiveFolder"
        xmlns:view="clr-namespace:ReactiveFolder.Views"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:myAction="clr-namespace:ReactiveFolder.Views.Actions"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="ReactiveFolder" 
        MinWidth="960"
        MinHeight="600"
        Width="960"
        Height="600"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        
        
        >
    
    <!--
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding WindowActivatedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    -->
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <view:SizeEventConverter x:Key="SizeEventConverter" />

        
        
    </Window.Resources>


    
    
    <Grid>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="SizeChanged" >
                <prism:InvokeCommandAction Command="{Binding WindowSizeChangeCommand}" TriggerParameterPath="NewSize"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>


        <!-- 画面が大きいとき -->
       


        <!-- 画面が中くらいのとき -->

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding IsOpenSideMenu.Value, Mode=TwoWay}"
                                   >
            <materialDesign:DrawerHost.LeftDrawerContent>
                <Border Visibility="{Binding IsOpenSideMenu.Value, Converter={StaticResource BoolToVisibility}}"
                            HorizontalAlignment="Left"
                        >
                    <view:SideMenu
                        />

                </Border>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel >
                <ContentControl
                        prism:RegionManager.RegionName="SubRegion"
                        Visibility="{Binding IsOpenSubContent.Value, Converter={StaticResource BoolToVisibility}}"
                        DockPanel.Dock="Right"
                        />

                <materialDesign:ColorZone Mode="Standard" materialDesign:ShadowAssist.ShadowDepth="Depth2" VerticalAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          >
                    <ContentControl prism:RegionManager.RegionName="MainRegion"
                                            VerticalContentAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            />

                </materialDesign:ColorZone>
            </DockPanel>

        </materialDesign:DrawerHost>
        
        


        <tb:TaskbarIcon 
            IconSource="/ReactiveFolder;component/Resources/icon.ico"
            >
            
            
            <i:Interaction.Triggers>
                <prism:InteractionRequestTrigger SourceObject="{Binding MessageRequest}">
                    <myAction:ShowTaskbarBalloonMessageAction />
                </prism:InteractionRequestTrigger>
                
            </i:Interaction.Triggers>
            
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Style>
                        <Style TargetType="ContextMenu"></Style>
                    </ContextMenu.Style>
                    <MenuItem Header="Open Window" Command="{Binding OpenWindowCommand}" />
                    <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>

           
            
        </tb:TaskbarIcon>
    </Grid>

</Window>
